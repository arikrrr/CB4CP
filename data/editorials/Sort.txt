For two strings to be the same after sorting, they must have the same occurrences of every possible lowercase letter. To answer the query for a range [l,r][l,r], we must ensure that after the operations, cntc=cnt2ccntc=cnt2c must where cntccntc is the number of times character cc occurs in the range for aa and cnt2ccnt2c is defined similarly for bb. Both cntccntc and cnt2ccnt2c can be obtained by doing prefix sums for character cc specifically. Note that since there are only 2626 possible cc, you can afford to create 2626 length nn prefix sum arrays.In one operation, you can replace one occurrence of a character cc with another character c2c2. Essentially, you are subtracting one from cntccntc and adding one to cntc2cntc2. Obviously, you must choose cc and c2c2 such that cntc>cnt2ccntc>cnt2c and cntc2<cnt2c2cntc2<cnt2c2. So, we only have to focus on cc or c2c2 since one decreasing will automatically lead to the other increase. The answer is just the sum of cntc−cnt2ccntc−cnt2c if cntc>cnt2ccntc>cnt2c over all possible lowercase characters cc.
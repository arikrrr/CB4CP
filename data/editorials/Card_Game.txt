2025E - Card GameSuppose we're solving the problem for one suit. Consider a distribution of cards between two players; how to check if at least one matching between cards of the first player and cards of the second player exists?Let's order the cards from the highest rank to the lowest rank and go through them in that order. If we get a card of the first player, we can add it to the "pool" of cards to be matched; if we get a card belonging to the second player, we match it with one of the cards from the "pool" (if there are none — there is no valid matching). So, if there exists a prefix of this order where the number of cards of the second player exceeds the number of cards belonging to the first player, it is not a valid distribution. Does this sound familiar?Let's say that a card belonging to the first player is represented by an opening bracket, and a card belonging to the second player is represented by a closing bracket. Then, if we need to solve the problem for just one suit, the distribution must be a regular bracket sequence. So, in this case, we just need to count the number of regular bracket sequences.However, if there are at least22suits, there might be "extra" cards of the11-st suit belonging to the first player, which we can match with "extra" cards of other suits belonging to the second player. To resolve this issue, we can use the following dynamic programming: letdpi,jdpi,jbe the number of ways to distribute the cards of the firstiisuits so that there arejjextra cards of the11-st suit belonging to the11-st player.To calculatedp1,jdp1,j, we have to count the number of bracket sequences such that the balance on each prefix is at least00, and the balance of the whole sequence is exactlyjj. In my opinion, the easiest way to do this is to run another dynamic programming (something like "wx,ywx,yis the number of sequences withxxelements and balanceyy"); however, you can try solving it in a combinatorial way similar to how Catalan numbers are calculated.What about transitions fromdpi,jdpi,jtodpi+1,j′dpi+1,j′? Let's iterate onkk— the number of "extra" cards we will use to match the cards of the(i+1)(i+1)-th suit belonging to the second player, so we transition fromdpi,jdpi,jtodpi+1,j−kdpi+1,j−k.Now we need to count the ways to distributemmcards of the same suit so that the second player receiveskkcards more than the first player, and all cards of the first player can be matched. Consider that we ordered the cards from the lowest rank to the highest rank. Then, on every prefix, the number of cards belonging to the first player should not exceed the number of cards belonging to the second player (otherwise we won't be able to match all cards belonging to the first player), and in total, the number of cards belonging to the second player should be greater bykk. So this is exactly the number of bracket sequences with balance≥0≥0on every prefix and balance equal tokkin total (and we have already calculated that)!So, the solution consists of two steps. First, for everyk∈[0,m]k∈[0,m], we calculate the number of bracket sequences with non-negative balance on each prefix and total balance equal tokk; then we run dynamic programming of the form "dpi,jdpi,jis the number of ways to distribute the cards of the firstiisuits so that there arejjextra cards of the11-st suit belonging to the11-st player". The most time-consuming part of the solution is this dynamic programming, and it works inO(nm2)O(nm2), so the whole solution works inO(nm2)O(nm2).
In fact, the problem can be solved in a single operation.Let's start a binary search on the initial permutation. We will get some index ll. Then, it is enough to swap plpl and xx. Now our binary search will stop exactly at the number xx. Notice that in the search, any number less than or equal to xx affects the result like xx. Indeed, pl≤xpl≤x remains true if we replace plpl with xx.Note that if we swapped two numbers that give the same result in the condition of the binary search, then the final ll will not change.The previous statements assumed that pl≤xpl≤x. Indeed, in the algorithm description, after changing ll, the number plpl cannot become greater than xx. It is also necessary to consider the case when l=1l=1 after executing the algorithm. If l=1l=1, then at each iteration of the algorithm, pm>xpm>x, in particular, this means that pmpm was never equal to xx. In this case, swapping p1p1 and xx will also not affect the result (ll) of the binary search.Complexity: O(n)O(n).
2028E - Alice's Adventures in the Rabbit HoleNote that Alice should always aim to move to the root, as this maximizes her probability of escaping (i.e., for any path from leaf to root, Alice's probability of escaping increases moving up the path). Furthermore, the Queen should always move downward for the same reason as above. Furthermore, the Queen should always move to the closest leaf in the subtree rooted at the current node.There are now a few ways to compute this, but basically all of them areO(n)O(n). For one such slick way, defined(v)d(v)to be the distance to the closest leaf of the subtree ofvv,p(v)p(v)to be the parent ofvv, andt(v)t(v)to be the probability Alice gets the treasure starting at nodevv. Then, we claim thatt(v)=d(v)d(v)+1⋅t(p(v))t(v)=d(v)d(v)+1⋅t(p(v))for all vertices except the root. We can populate these values as we DFS down the tree.Indeed, suppose that the tree is just a path withd+1d+1vertices, labelled from11throughd+1d+1. Then, Alice's probability of getting the treasure at nodeiiis1−i−1d1−i−1d(this comes from solving a system of linear equations). This lines up with the abovet(v)t(v)calculation.Now, we can construct the answer inductively. LetPPbe a shortest root-to-leaf path inTTand consider the subtrees formed by removing the edges ofPPfromTT. Each such subtree is rooted at some nodev∈Pv∈P. Then, in a subtreeT′T′rooted atvv, the probability of Alice getting the treasure is exactly the probability that Alice gets to nodevvand then to node11fromvv, by the chain rule of conditioning and noting that the Queen will never re-enter the subtreeT′T′and the game will only play out alongPPfrom this point forward. Therefore, it suffices to deconstructTTinto shortest root-to-leaf paths and note that at a given vertexvv, we only have to play along the sequence of shortest root-to-leaf paths leading fromvvto11. Along each of these paths, the above probability calculation holds, so we are done.
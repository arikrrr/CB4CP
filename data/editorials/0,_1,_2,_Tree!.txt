Note that since the tree has a+b+ca+b+c vertices, all vertices have 00, 11, or 22 children. Call a vertex a leaf if it has no children.The idea is to "grow" the tree from the root by adding one or two vertices at a time. Formally:Otherwise we need to minimize the height. The idea is greedy: note that we should always grow by 22 instead of 11 when we have a choice, because it's clear that it will strictly decrease the height. Similarly, we should always grow the node closest to the root to minimize the height.Thus we can just simulate the process described above growing by 22 first and 11 afterwards, which takes O(a+b+c)O(a+b+c) time.Bonus: can you solve the problem in O(log(a+b+c))O(log‚Å°(a+b+c)) time? Or even better?A note on the implementation. You can store the number of "free" nodes on the current level and the next level in two variables, i.e. you don't need to store a whole tree at all. As you iterate through the current level, store the number of nodes in the next level.
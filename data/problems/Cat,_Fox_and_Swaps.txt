Fox has found an array p 1 , p 2 , … , p n p 1 , p 2 , … , p n , that is a permutation of length n † n † of the numbers 1 , 2 , … , n 1 , 2 , … , n . She wants to sort the elements in increasing order. Cat wants to help her — he is able to swap any two numbers x x and y y in the array, but only if l ≤ x + y ≤ r l ≤ x + y ≤ r (note that the constraint is imposed on the values of the elements, not their positions). He can make such swaps any number of times.
They don't know the numbers l l , r r yet, they only know that it's true that 1 ≤ l ≤ r ≤ 2 ⋅ n 1 ≤ l ≤ r ≤ 2 ⋅ n .
You are given the number n n and the array p 1 , p 2 , … , p n p 1 , p 2 , … , p n . Determine how many pairs ( l , r ) ( l , r ) satisfying the conditions are there such that you can sort the permutation if you can only swap two number ( x , y ) ( x , y ) such that l ≤ x + y ≤ r l ≤ x + y ≤ r (arbitrary number of times, possibly 0 0 ).
† † A permutation of length n n is an array consisting of n n distinct integers from 1 1 to n n in arbitrary order. For example, [ 2 , 3 , 1 , 5 , 4 ] [ 2 , 3 , 1 , 5 , 4 ] is a permutation, but [ 1 , 2 , 2 ] [ 1 , 2 , 2 ] is not a permutation ( 2 2 appears twice in the array), and [ 1 , 3 , 4 ] [ 1 , 3 , 4 ] is also not a permutation ( n = 3 n = 3 but there is 4 4 in the array).
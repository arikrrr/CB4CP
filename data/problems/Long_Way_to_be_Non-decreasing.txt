Little R is a magician who likes non-decreasing arrays. She has an array of length n n , initially as a 1 , … , a n a 1 , … , a n , in which each element is an integer between [ 1 , m ] [ 1 , m ] . She wants it to be non-decreasing, i.e., a 1 ≤ a 2 ≤ … ≤ a n a 1 ≤ a 2 ≤ … ≤ a n .
To do this, she can perform several magic tricks. Little R has a fixed array b 1 … b m b 1 … b m of length m m . Formally, let's define a trick as a procedure that does the following things in order:
Little R wonders how many tricks are needed at least to make the initial array non-decreasing. If it is not possible with any amount of tricks, print − 1 − 1 instead.